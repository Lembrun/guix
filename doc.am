# GNU Guix --- Functional package management for GNU
# Copyright © 2012, 2013, 2014, 2015 Ludovic Courtès <ludo@gnu.org>
# Copyright © 2013 Andreas Enge <andreas@enge.fr>
#
# This file is part of GNU Guix.
#
# GNU Guix is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or (at
# your option) any later version.
#
# GNU Guix is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Guix.  If not, see <http://www.gnu.org/licenses/>.

info_TEXINFOS = doc/guix.texi
EXTRA_DIST +=					\
  doc/contributing.texi				\
  doc/emacs.texi				\
  doc/fdl-1.3.texi				\
  doc/images/bootstrap-graph.dot		\
  doc/images/bootstrap-graph.eps		\
  doc/images/bootstrap-graph.pdf		\
  doc/images/coreutils-size-map.eps		\
  doc/environment-gdb.scm

OS_CONFIG_EXAMPLES_TEXI =			\
  doc/os-config-bare-bones.texi			\
  doc/os-config-desktop.texi

# Bundle this file so that makeinfo finds it in out-of-source-tree builds.
BUILT_SOURCES        += $(OS_CONFIG_EXAMPLES_TEXI)
EXTRA_DIST           += $(OS_CONFIG_EXAMPLES_TEXI)
MAINTAINERCLEANFILES  = $(OS_CONFIG_EXAMPLES_TEXI)

doc/os-config-%.texi: gnu/system/examples/%.tmpl
	$(MKDIR_P) "`dirname "$@"`"
	cp "$<" "$@"

infoimagedir = $(infodir)/images
dist_infoimage_DATA =				\
  doc/images/bootstrap-graph.png		\
  doc/images/coreutils-size-map.png

# Try hard to obtain an image size and aspect that's reasonable for inclusion
# in an Info or PDF document.
DOT_OPTIONS =					\
  -Gratio=.9 -Gnodesep=.005 -Granksep=.00005	\
  -Nfontsize=9 -Nheight=.1 -Nwidth=.1

.dot.png:
	$(DOT) -Tpng $(DOT_OPTIONS) < "$<" > "$@.tmp"
	mv "$@.tmp" "$@"

.dot.pdf:
	$(DOT) -Tpdf $(DOT_OPTIONS) < "$<" > "$@.tmp"
	mv "$@.tmp" "$@"

.dot.eps:
	$(DOT) -Teps $(DOT_OPTIONS) < "$<" > "$@.tmp"
	mv "$@.tmp" "$@"

.png.eps:
	convert "$<" "$@-tmp.eps"
	mv "$@-tmp.eps" "$@"

# We cannot add new dependencies to `doc/guix.pdf' & co. (info "(automake)
# Extending").  Using the `-local' rules is imperfect, because they may be
# triggered after the main rule.  Oh, well.
pdf-local: $(top_srcdir)/doc/images/bootstrap-graph.pdf
info-local: $(top_srcdir)/doc/images/bootstrap-graph.png
ps-local: $(top_srcdir)/doc/images/bootstrap-graph.eps		\
	  $(top_srcdir)/doc/images/coreutils-size-map.eps
dvi-local: ps-local


# Manual pages.

doc/guix.1: $(SUBCOMMANDS:%=guix/scripts/%.scm)
	-LANGUAGE= $(top_builddir)/pre-inst-env	\
	  $(HELP2MAN) --output="$@" guix

# Note: Do not depend on 'guix-daemon' since that would trigger a rebuild even
# for people building from a tarball.
doc/guix-daemon.1: nix/nix-daemon/guix-daemon.cc
	-LANGUAGE= $(top_builddir)/pre-inst-env	\
	  $(HELP2MAN) --output="$@" guix-daemon

define subcommand-manual-target

doc/guix-$(1).1: guix/scripts/$(1).scm
	-LANGUAGE= $(top_builddir)/pre-inst-env		\
	  $(HELP2MAN) --output="$$@" "guix $(1)"

endef

SUBCOMMANDS :=					\
  archive					\
  build						\
  download					\
  edit						\
  environment					\
  gc						\
  hash						\
  import					\
  lint						\
  package					\
  publish					\
  pull						\
  refresh					\
  size						\
  system

$(eval $(foreach subcommand,$(SUBCOMMANDS),			\
          $(call subcommand-manual-target,$(subcommand))))

dist_man1_MANS =				\
  doc/guix.1					\
  $(SUBCOMMANDS:%=doc/guix-%.1)

if BUILD_DAEMON

dist_man1_MANS +=				\
  doc/guix-daemon.1

endif
